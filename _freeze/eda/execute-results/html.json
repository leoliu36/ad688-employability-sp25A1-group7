{
  "hash": "b67310384c97f8233c1d8d77f6b89e9a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: EDA Overview\n---\n\n\nThis section explores job market trends and the restructuring of compensation through a series of visualizations. Each exploratory data analysis (EDA) was chosen to reveal specific patterns in compensation to highlight the impact of AI and remote work.\n\n\n::: {#5f52558f .cell execution_count=1}\n``` {.python .cell-code}\n# _setup.qmd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.io as pio\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Define a consistent theme\ncustom_theme = go.layout.Template(\n    layout=go.Layout(\n        font=dict(family=\"Arial\", size=12, color=\"#000000\"),\n        title=dict(font=dict(size=16, family=\"Arial\")),\n        paper_bgcolor=\"white\",\n        plot_bgcolor=\"white\",\n        colorway=px.colors.qualitative.Set2\n    )\n)\npio.templates[\"custom_white\"] = custom_theme\npio.templates.default = \"custom_white\"\n\nplt.style.use(\"seaborn-v0_8-whitegrid\")\nplt.rcParams.update({\n    \"font.family\": \"Arial\",\n    \"font.size\": 7,\n    \"axes.titlesize\": 11,\n    \"axes.labelsize\": 9,\n    \"figure.dpi\": 120,\n    \"savefig.dpi\": 150\n})\nsns.set_palette(\"Set2\")\n```\n:::\n\n\n::: {#ea3b86b3 .cell execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\n\n# Load pre-cleaned dataset\ndf = pd.read_csv(\"data/cleaned_job_postings.csv\")\n```\n:::\n\n\n## Salary by Remote Work Type\nThe purpose of this EDA is to visually compare not just the average pay, but also the range and consistency of salaries across different work arrangements. This visualization could reveal that remote roles have a wider salary range, indicating that companies are paying a premium for top talent regardless of location.\n\n::: {#e5e1a0e3 .cell execution_count=3}\n``` {.python .cell-code}\n# 5.1.1 Visual - Compensation\nimport plotly.express as px\nimport pandas as pd\n\nvalues_to_exclude = ['Unknown', '[None]']\ndf_filtered = df[~df['REMOTE_TYPE_NAME'].isin(values_to_exclude)]\n\nfig1 = px.box(\n    df_filtered,\n    x=\"REMOTE_TYPE_NAME\",\n    y=\"SALARY\",\n    title=\"Salary Distribution by Work Arrangement\",\n    labels={\"REMOTE_TYPE_NAME\": \"Work Arrangement\", \"SALARY\": \"Annual Salary ($)\"},\n    width=800,\n    height=600,\n    color=\"REMOTE_TYPE_NAME\",                         \n    color_discrete_sequence=px.colors.qualitative.Set2\n)\n#fig1.show()\nfig1.write_image(\"figures/salary_by_work_arrangement.png\", scale=2)\n```\n:::\n\n\n![Figure 2: Salary Distribution by Work Arrangement](figures/salary_by_work_arrangement.png)\n\n**Key Insights:**\nThe median salaries across all work arrangements are similar, clustering around $115,000. However, both Remote and Hybrid Remote roles exhibit a much wider salary range and more high-paying outlier positions, with some remote roles exceeding $350,000. This suggests that while typical pay is comparable, remote-friendly positions offer significantly greater potential for top-end compensation.\n\n\n## Top Skills vs. Average Salary\nThe purpose of this EDA is to identify which specific skills are most financially valuable in the current job market, connecting AI-related skills to compensation. This could reveal that skills related to AI/ML platforms command a significantly higher salary, even if they aren't the most frequently requested skills overall.\n\n::: {#360b2cb1 .cell execution_count=4}\n``` {.python .cell-code}\n# 5.1.2 Visual - Skills vs. Salary\nimport plotly.express as px\nimport ast\n\n# This function safely converts the string of a list into an actual list\ndef parse_skills(skill_list_str):\n    try:\n        return ast.literal_eval(skill_list_str)\n    except (ValueError, SyntaxError):\n        return []\n\n# Create a new column with the cleaned lists of skills\ndf['SKILLS_LIST'] = df['SKILLS_NAME'].apply(parse_skills)\n\n# Create a new DataFrame where each skill gets its own row\ndf_skills_exploded = df.explode('SKILLS_LIST')\n\n# --- Now, create the chart using the cleaned data ---\ntop_10_skills_by_count = df_skills_exploded['SKILLS_LIST'].value_counts().nlargest(10).index\ndf_top_skills = df_skills_exploded[df_skills_exploded['SKILLS_LIST'].isin(top_10_skills_by_count)]\n\navg_salary_for_top_skills = df_top_skills.groupby('SKILLS_LIST')['SALARY'].mean().reset_index()\n\nfig2 = px.bar(\n    avg_salary_for_top_skills,\n    x='SKILLS_LIST',\n    y=\"SALARY\",\n    title=\"Average Salary for Top 10 Skills\",\n    labels={'SKILLS_LIST': \"Skill\", \"SALARY\": \"Average Annual Salary ($)\"},\n    width=800,\n    height=600,                       \n    color_discrete_sequence=px.colors.qualitative.Set2,\n    opacity=0.7\n)\n#fig2.show()\nfig2.write_image(\"figures/topskills_salary.png\", scale=2)\n```\n:::\n\n\n![Figure 3: Average Salary for Top 10 Skills most in Demand](figures/topskills_salary.png)\n\n**Key Insights:**\nAmong the 10 most in-demand skills, Data Analysis commands the highest average salary at over $120,000. While compensation for most top skills is competitive, technical skills like Data Analysis and Business Process show a slight financial advantage over the lowest-paid skill in this group, Management, which averages approximately $110,000.\n\n\n## Salary Trends by Top Industries\nThe motivation for this EDA is to explore how compensation varies across economic sectors and identify which industries offer the highest earning potential. Using the 2024 job posting data and grouping by industry (NAICS 2022 Level-6 codes), this analysis aims to compare the median salary and salary distribution across highest-paying industries within the job market. \n\n::: {#0bdd50d8 .cell execution_count=5}\n``` {.python .cell-code}\n## Query Setup\n# Convert the POSTED date from string to date format\ndf[\"POSTED\"] = pd.to_datetime(df[\"POSTED\"], errors=\"coerce\")\n\n# Filter for job postings from 2024, specifically looking at Salary and Industry. Exclude unknowns, nulls, and zeros. Exclude 'Unclassified Industry' \ndf_jp_2024 = df[\n  (df[\"POSTED\"].dt.year==2024) & \n  (df[\"SALARY\"] > 0) & \n  (df[\"SALARY\"].notnull()) &\n  (df[\"NAICS_2022_6_NAME\"]!= \"Unknown\") &\n  (df[\"NAICS_2022_6_NAME\"]!= \"Unclassified Industry\")\n]\n\n## Further filter to exclude industries that have an insignificant number of job postings\n# count the number of rows per industry  \nindustry_jp_count = df_jp_2024[\"NAICS_2022_6_NAME\"].value_counts()\n\n# summarize the distribution of job counts per industry\nindustry_jp_count.describe()\n\n# Set minimum threshold at 100 job postings to ensure statistical significance\ntop_jp_industries = industry_jp_count[industry_jp_count > 100].index\n\n# Update df to only show top job posting industries\ndf_jp_2024 = df_jp_2024[df_jp_2024[\"NAICS_2022_6_NAME\"].isin(top_jp_industries)]\n```\n:::\n\n\n::: {#f40c5b09 .cell execution_count=6}\n``` {.python .cell-code}\n## Plot: Analyze Median Salary by Industry (Seaborn)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# group by industry name and calculate median salary, sort by descending order\ntop_industry_salary_order = (\n    df_jp_2024.groupby(\"NAICS_2022_6_NAME\")[\"SALARY\"]\n    .median()\n    .sort_values(ascending=False)\n    .head(12)\n)\nindustry_order = top_industry_salary_order.index.tolist()\n\nplt.figure(figsize=(12, 5))\nax1=sns.barplot(\n    data=df_jp_2024,\n    y=\"NAICS_2022_6_NAME\",\n    x=\"SALARY\",\n    hue=\"NAICS_2022_6_NAME\",\n    order=industry_order,\n    orient='h',\n    palette=\"Set3\",\n    estimator=np.median,\n    errorbar=None,\n    legend=False,\n    alpha=0.8\n)\n\nfor patch in ax1.patches:\n    patch.set_alpha(0.8)\n\nplt.title(\"Median Salary by Industry\")\nplt.xlabel(\"Median Salary ($)\")\nplt.ylabel(\"Industry\")\nplt.yticks(ha=\"right\", fontsize=9)\nplt.xticks(fontsize=9)\nplt.tight_layout()\nout_path = \"figures/median_salary_by_industry.png\"\nplt.savefig(out_path, dpi=150, bbox_inches=\"tight\")\n#plt.show()\nplt.close()\n```\n:::\n\n\n![Figure 4: Median Salary by Industry](figures/median_salary_by_industry.png)\n\n::: {#5779f0aa .cell execution_count=7}\n``` {.python .cell-code}\n## Plot: Analyze Salary Distribution by Industry (Seaborn)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# # determine IQRs by industry:\n# q25 = df_jp_2024.groupby(\"NAICS_2022_6_NAME\")[\"SALARY\"].quantile(0.25)\n# q75 = df_jp_2024.groupby(\"NAICS_2022_6_NAME\")[\"SALARY\"].quantile(0.75)\n# # sort by the middle 50% (Q3 - Q1) and name that as the new sorting order\n# iqr = (q75 - q25).sort_values(ascending=False).head(12)\n\n#iqr_order = iqr.index.to_list()\nindustry_order = top_industry_salary_order.index.tolist()\n\nplt.figure(figsize=(12, 5))\nax2 = sns.boxplot(\n    data=df_jp_2024,\n    y=\"NAICS_2022_6_NAME\",\n    x=\"SALARY\",\n    order=industry_order,\n    palette=\"Set3\",\n    width=0.6,\n    fliersize=2.5,  \n    linewidth=0.8,\n)\n\nfor patch in ax2.patches:\n    patch.set_alpha(0.8)\n\nplt.title(\"Salary Distribution by Industry\")\nplt.xlabel(\"Salary ($)\")\nplt.ylabel(\"Industry\")\nplt.yticks(ha=\"right\", fontsize=9)\nplt.xticks(fontsize=9)\nplt.tight_layout()\n\n# Save and display the figure\nout_path = \"figures/salary_distribution_by_industry.png\"\nplt.savefig(out_path, dpi=150, bbox_inches=\"tight\")\n#plt.show()\nplt.close()\n```\n:::\n\n\n![Figure 5: Salary Distribution by Industry](figures/salary_distribution_by_industry.png)\n\n**Key Insights:**\nThe analysis of median salary across industries shows that Web Search Portals and All Other Information Services leads with the highest median pay, exceeding $160,000. This is likely due to the increasing demand on specialized digital infrastructure and AI-driven information services. The box plot shows a wide interquartile range (IQR), indicating a significant pay gap between entry-level and more senior/specialized roles in the industry. This trend is also observed in the Computing Infrastructure Providers, Data Processing, Web Hosting, and Related Services category, which is indicative of the range of roles in demand for those industries. Although other technology and information industries such as Software Publishers and Computer System Design Services reported slightly lower median salaries compared to the top-paying sectors, the large amount of high-end outlier values suggests that these industries still offer high-earning potential for more senior/specialized roles with most positions clustering around mid-range salaries. \n\nNotably, non-technology/information-related sectors such as All Other Miscellaneous Retailers also reported high median salaries, around $160,000. The broad definition of these sectors likely encompasses various types of retail firms that may include roles and platforms beyond the traditional frontline retail and sales roles. Another sector in which compensation data may be inflated by data categorization is Offices of Certified Public Accountants (CPAs), which reported a median salary of around $145,000. Based on the salary distribution highlighted in the box plot, the positively-skewed distribution indicates that while most CPA roles earn around the median, some specialized roles are earning substantially more. This aligns with how CPA firms are typically structured, where a small number of senior partners and high-level executives driving the high-end outliers. \n\nThese findings show that companies in technology, professional services, and consulting industries offer the highest median salaries and exhibit a larger dispersion in compensation, which is reflective of a more diverse workforce structure that may include entry level, technical/specialist, and senior leadership roles. On the other hand, administrative and support service sectors demonstrate lower median but tighter distributions in salary, demonstrating a more standardized workforce and wage structure in comparison. \n\n\n## AI vs. Non-AI Salary Comparison \nThe motivation for this analysis was to investigate how specialization in AI-related skills influence salary in today's job market. This analysis differentiates AI vs. non-AI jobs by identifying AI-related keywords such as machine learning, data science, computer vision, and natural language processing in job postings. We then compare the median and distribution of salaries between the two groups to determine whether AI roles command higher compensation than non-AI roles. \n\n::: {#ce79005a .cell execution_count=8}\n``` {.python .cell-code}\nimport pandas as pd\nimport re\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Create a lowercase version of the BODY column for keyword searching\ndf[\"BODY\"] = df[\"BODY\"].astype(str).str.lower()\n\n# identify AI related keywords \nai_keywords = [\n    \"machine learn\",  # matches 'machine learning', 'machine learner'\n    \"data scien\",     # matches 'data scientist', 'data science'\n    \"artificial intel\",  # matches 'artificial intelligence'\n    \"deep learn\",  \n    \"ml engineer\",            \n    \"data engineer\",\n    \"computer vision\", \n    \"natural language\", \n    \"nlp\",\n    \"big data\",\n    \"cloud data\"\n]\n\n# Create a regex pattern that matches any of the keywords, case-insensitive\nai_pattern = re.compile(r\"|\".join([re.escape(k) for k in ai_keywords]), flags=re.IGNORECASE)\n\n# Assign a new column is_ai_job to label job postings with AI or Non-AI based on keyword presence in the BODY text\ndf[\"is_ai_job\"] = df[\"BODY\"].apply(lambda text: \"AI\" if ai_pattern.search(text) else \"Non-AI\")\n\n# Filter out rows with null or zero salary and outliers \ndf_filtered_1 = df[\n    (df[\"SALARY\"].notnull()) &\n    (df[\"SALARY\"] > 0)\n]\nq1 = df_filtered_1[\"SALARY\"].quantile(0.01)\nq99 = df_filtered_1[\"SALARY\"].quantile(0.99)\ndf_filtered_1 = df_filtered_1[(df_filtered_1[\"SALARY\"] >= q1) & (df_filtered_1[\"SALARY\"] <= q99)]\nprint(df_filtered_1[\"is_ai_job\"].value_counts())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nis_ai_job\nNon-AI    15948\nAI         5273\nName: count, dtype: int64\n```\n:::\n:::\n\n\n::: {#024252fb .cell execution_count=9}\n``` {.python .cell-code}\nplt.figure(figsize=(8, 5))\nax3=sns.boxplot(\n    data=df_filtered_1, \n    x=\"is_ai_job\", \n    y=\"SALARY\",\n    hue=\"is_ai_job\",\n    legend=False,\n    palette=\"Set3\",\n    width=0.4\n)\n\nfor patch in ax3.patches:\n    patch.set_alpha(0.8)\n\nplt.title(\"Salary Distribution: AI vs. Non-AI Jobs\")\nplt.xlabel(\"Job Type\", fontsize=9)\nplt.ylabel(\"Salary ($)\", fontsize=9)\nplt.tight_layout()\n#plt.show()\nout_path = \"figures/AI_v_nonAI_salary_boxplot.png\"\nplt.savefig(out_path, dpi=150)\nplt.close()\n```\n:::\n\n\n![Figure 6: Salary Distribution comparison between AI vs. Non-AI Jobs](figures/AI_v_nonAI_salary_boxplot.png)\n\n::: {#ac4affa5 .cell execution_count=10}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# KDE Plot\nplt.figure(figsize=(8, 5))\nax4=sns.kdeplot(\n    data=df_filtered_1, \n    x=\"SALARY\", \n    hue=\"is_ai_job\", \n    common_norm=False,\n    linewidth=3,\n    palette=\"Set2\",\n    alpha=0.8\n)\n\nfor patch in ax4.patches:\n    patch.set_alpha(0.8)\n\nplt.title(\"Salary Density: AI vs. Non-AI Jobs\")\nplt.xlabel(\"Salary ($)\", fontsize=9)\nplt.ylabel(\"Density\", fontsize=9)\nplt.tight_layout()\n#plt.show()\nout_path = \"figures/AI_v_nonAI_salary_KDE.png\"\nplt.savefig(out_path, dpi=150)\nplt.close()\n```\n:::\n\n\n![Figure 7: Salary Density comparison between AI vs. Non-AI Jobs](figures/AI_v_nonAI_salary_KDE.png)\n\n**Key Insights:**\nThe salary comparison between AI and non-AI job postings shows a wage premium associated with roles that require AI-related skill sets. Analyzing 5273 AI roles and 15949 non-AI roles, the box plot shows that AI roles have a higher median salary ($115,000-$120,000) than non-AI roles ($105,000-$110,000). In terms of IQRs - both Q1 and Q3 for AI roles is positioned higher in comparison to non-AI roles. This suggests that roles that require expertise in AI-related skills generally pay better than the rest of the job market. \n\nThe KDE plot shows that AI roles have a steep upward slope from $20,000-$80,000 with job postings mostly clustering between $80,000-$120,000. This pattern likely means that there are less entry-level roles in AI and most roles are concentrated in the mid-salary range. This suggests that while there aren’t many jobs that reflect entry level salaries, AI-related job postings reflect a higher salary floor driven by a higher barrier of entry. \n\n",
    "supporting": [
      "eda_files"
    ],
    "filters": [],
    "includes": {}
  }
}